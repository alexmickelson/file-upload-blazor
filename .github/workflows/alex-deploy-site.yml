name: Not Alex CI/CD Pipeline
on: [push]
jobs:
  # lintingAndBuilding:
    # runs-on: not-alex-runner-label
    # steps:
    #   - name: Check out repository code
    #     uses: actions/checkout@v4
    #   # - uses: actions/setup-dotnet@v3
    #   #   with:
    #   #     dotnet-version: 8.0.x
    #   - name: lint and test
    #     run: |
    #       echo "RUNNING C# TESTS"
    #       dotnet test
          
    #       echo "VERIFYING FORMATTING"
    #       if dotnet format --verify-no-changes --severity warn ; then
    #         echo "FORMATTING IS CORRECT"
    #       else
    #         echo "FORMATTING FAILED"
    #           exit 1
    #       fi
    #       dotnet build /WarnAsError

  deploying:
    # needs: lintingAndBuilding
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: deploy
        run: |
          docker build -t 144.17.92.12:5000/alex/blazor-web:$GITHUB_RUN_ID .

          docker push 144.17.92.12:5000/alex/blazor-web:$GITHUB_RUN_ID

          # kubectl -n alex create configmap blazor-web-postgres-init --from-file=init.sql

          cd kube-configs
            kubectl -n alex delete configmap otel-config || true
            kubectl -n alex create configmap otel-config --from-file=otel-collector-config.yml
            kubectl -n alex delete configmap grafana-datasource-config || true
            kubectl -n alex create configmap grafana-datasource-config --from-file=grafana-datasource.yml
          cd ..

          for file in ./kube/*; do
            echo "Applying $file"
            cat $file | envsubst | kubectl apply -f -
          done
